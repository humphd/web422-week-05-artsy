{"version":3,"sources":["api.js","Search.js","SearchResults.js","App.js","index.js"],"names":["json","throttle","endpoint","a","apiUrl","fetch","res","ok","Error","status","search","query","fields","length","join","artworkImageUrl","id","width","Search","onChange","SearchInput","placeholder","autoFocus","value","SearchResults","results","loading","Row","Spinner","className","animation","role","map","result","Col","xs","md","lg","Card","Img","variant","src","image_id","alt","thumbnail","alt_text","Body","Title","title","App","useState","setResults","setQuery","setLoading","error","setError","useEffect","then","searchResults","data","catch","err","finally","Navbar","bg","Brand","Jumbotron","fluid","Container","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAGMA,EAAOC,mBAAQ,uCAAC,WAAOC,GAAP,iBAAAC,EAAA,6DAEdC,EAFc,sCAE0BF,GAF1B,SAIFG,MAAMD,GAJJ,WAIdE,EAJc,QAKXC,GALW,sBAMZ,IAAIC,MAAJ,wBAA2BN,EAA3B,aAAwCI,EAAIG,OAA5C,MANY,gCAQbH,EAAIN,QARS,2CAAD,sDASlB,KAGUU,EAAM,uCAAG,WAAOC,GAAP,iCAAAR,EAAA,0DAChBD,EADgB,6BACiBS,EADjB,wBAAiBC,EAAjB,iCAAiBA,EAAjB,iBAEhBA,EAAOC,SACTX,GAAY,WAAaU,EAAOE,KAAK,MAHnB,kBAKbd,EAAKE,IALQ,2CAAH,sDASNa,EAAkB,SAACC,GAAD,IAAKC,EAAL,uDAAa,IAAb,6CACGD,EADH,iBACcC,EADd,oB,gBCThBC,MAZf,YAAsC,IAApBP,EAAmB,EAAnBA,MAAOQ,EAAY,EAAZA,SACvB,OACE,cAACC,EAAA,EAAD,CACEC,YAAY,uCACZJ,MAAM,OACNK,WAAS,EACTC,MAAOZ,EACPQ,SAAUA,K,oCC4BDK,MAnCf,YAA8C,IAArBC,EAAoB,EAApBA,QACvB,OAD2C,EAAXC,QAG5B,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAASC,UAAU,UAAUC,UAAU,SAASC,KAAK,SAArD,SACE,sBAAMF,UAAU,UAAhB,4BAMFJ,GAAWA,EAAQZ,OAKvB,cAACc,EAAA,EAAD,UACGF,EAAQO,KAAI,SAACC,GAAD,aACX,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAxB,SACE,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,IAAN,CACEC,QAAQ,MACRC,IAAK1B,EAAgBkB,EAAOS,SAAU,KACtCC,IAAG,UAAEV,EAAOW,iBAAT,aAAE,EAAkBC,WAEzB,cAACP,EAAA,EAAKQ,KAAN,UACE,cAACR,EAAA,EAAKS,MAAN,UAAad,EAAOe,cARMf,EAAOjB,SANpC,M,cCmDIiC,MAxDf,WAAgB,IAAD,EACiBC,mBAAS,MAD1B,mBACNzB,EADM,KACG0B,EADH,OAEaD,mBAAS,IAFtB,mBAENvC,EAFM,KAECyC,EAFD,OAGiBF,oBAAS,GAH1B,mBAGNxB,EAHM,KAGG2B,EAHH,OAIaH,mBAAS,MAJtB,mBAINI,EAJM,KAICC,EAJD,KA8Bb,OAxBAC,qBAAU,WAEF7C,GAASA,EAAME,OAMjBF,EAAME,OAAS,IAKnBwC,GAAW,GACX3C,EAAOC,EAAO,KAAM,QAAS,WAAY,aACtC8C,MAAK,SAACC,GACDA,GAAiBA,EAAcC,MACjCR,EAAWO,EAAcC,SAG5BC,OAAM,SAACC,GAAD,OAASN,EAASM,MACxBC,SAAQ,kBAAMT,GAAW,OAlB1BF,EAAW,QAmBZ,CAACxC,IAGF,sBAAKkB,UAAU,MAAf,UACE,mCACE,cAACkC,EAAA,EAAD,CAAQC,GAAG,OAAOxB,QAAQ,OAA1B,SACE,cAACuB,EAAA,EAAOE,MAAR,sBAEF,cAACC,EAAA,EAAD,CAAWC,OAAK,EAACtC,UAAU,sBAA3B,SACE,eAACuC,EAAA,EAAD,CAAWvC,UAAU,cAArB,UACE,mDACA,cAAC,EAAD,CAAQlB,MAAOA,EAAOQ,SAAU,SAACkD,GAAD,OAAOjB,EAASiB,EAAEC,OAAO/C,kBAI/D,+BACE,cAAC6C,EAAA,EAAD,CAAWD,OAAK,EAAhB,SACGb,EACC,4DAEA,cAAC,EAAD,CAAe7B,QAASA,EAASC,QAASA,YCrDtD6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.e2e33ae9.chunk.js","sourcesContent":["import { throttle } from \"lodash\";\n\n// https://lodash.com/docs/4.17.15#throttle\nconst json = throttle(async (endpoint) => {\n  // https://www.artic.edu/articles/902/public-access-to-our-public-presence-sharing-our-api\n  const apiUrl = `https://api.artic.edu/api/v1${endpoint}`;\n\n  const res = await fetch(apiUrl);\n  if (!res.ok) {\n    throw new Error(`error loading ${endpoint} (${res.status})`);\n  }\n  return res.json();\n}, 200);\n\n// http://api.artic.edu/docs/#collections\nexport const search = async (query, ...fields) => {\n  let endpoint = `/artworks/search?q=${query}&limit=25`;\n  if (fields.length) {\n    endpoint += \"&fields=\" + fields.join(\",\");\n  }\n  return json(endpoint);\n};\n\n// http://api.artic.edu/docs/#images\nexport const artworkImageUrl = (id, width = 843) =>\n  `https://www.artic.edu/iiif/2/${id}/full/${width},/0/default.jpg`;\n","// https://evergreen.segment.com/components/search-input\nimport { SearchInput } from \"evergreen-ui\";\n\nfunction Search({ query, onChange }) {\n  return (\n    <SearchInput\n      placeholder=\"Enter search term, for example: cats\"\n      width=\"100%\"\n      autoFocus\n      value={query}\n      onChange={onChange}\n    />\n  );\n}\n\nexport default Search;\n","import { Row, Col, Card, Spinner } from \"react-bootstrap\";\nimport { artworkImageUrl } from \"./api\";\n\nfunction SearchResults({ results, loading }) {\n  if (loading) {\n    return (\n      <Row>\n        <Spinner className=\"mx-auto\" animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      </Row>\n    );\n  }\n\n  if (!(results && results.length)) {\n    return null;\n  }\n\n  return (\n    <Row>\n      {results.map((result) => (\n        <Col xs={12} md={4} lg={3} key={result.id}>\n          <Card>\n            <Card.Img\n              variant=\"top\"\n              src={artworkImageUrl(result.image_id, 250)}\n              alt={result.thumbnail?.alt_text}\n            />\n            <Card.Body>\n              <Card.Title>{result.title}</Card.Title>\n            </Card.Body>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n}\n\nexport default SearchResults;\n","import { useState, useEffect } from \"react\";\nimport { Navbar, Jumbotron, Container } from \"react-bootstrap\";\n\nimport { search } from \"./api\";\nimport Search from \"./Search\";\nimport SearchResults from \"./SearchResults\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const [results, setResults] = useState(null);\n  const [query, setQuery] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Clear the results if the user gets rid of the search query\n    if (!(query || query.length)) {\n      setResults(null);\n      return;\n    }\n\n    // Don't bother searching for anything less than 3 characters\n    if (query.length < 3) {\n      return;\n    }\n\n    // Otherwise, start a search\n    setLoading(true);\n    search(query, \"id\", \"title\", \"image_id\", \"thumbnail\")\n      .then((searchResults) => {\n        if (searchResults && searchResults.data) {\n          setResults(searchResults.data);\n        }\n      })\n      .catch((err) => setError(err))\n      .finally(() => setLoading(false));\n  }, [query]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand>Atrsy</Navbar.Brand>\n        </Navbar>\n        <Jumbotron fluid className=\"painting-background\">\n          <Container className=\"text-center\">\n            <h1>Find Art You Love</h1>\n            <Search query={query} onChange={(e) => setQuery(e.target.value)} />\n          </Container>\n        </Jumbotron>\n      </header>\n      <main>\n        <Container fluid>\n          {error ? (\n            <p>Unable to retrieve results.</p>\n          ) : (\n            <SearchResults results={results} loading={loading} />\n          )}\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}